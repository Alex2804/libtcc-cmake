
if(__define_libtcc_sources)
    return()
endif()
set(__define_libtcc_sources INCLUDED)

function(define_libtcc_sources __TARGET_ARCHITECTURE__ __LIBTCC_SOURCES__ __STATUS_MESSAGE__)
    if(DEFINED ${__LIBTCC_SOURCES__})
        list(APPEND __SOURCES__ "${${__LIBTCC_SOURCES__}}")
    endif()

    if(LIBTCC_ONE_SOURCE)
        list(APPEND __SOURCES__ src/libtcc.c)
    else()
        list(APPEND __SOURCES__ src/libtcc.c src/tccpp.c src/tccgen.c src/tccelf.c src/tccasm.c src/tccrun.c)
        if(${${__TARGET_ARCHITECTURE__}} STREQUAL I386)
            list(APPEND __SOURCES__ src/i386-gen.c src/i386-link.c src/i386-asm.c src/i386-asm.c)
        elseif(${${__TARGET_ARCHITECTURE__}} STREQUAL X86_64)
            list(APPEND __SOURCES__ src/x86_64-gen.c src/x86_64-link.c src/i386-asm.c)
        elseif(${${__TARGET_ARCHITECTURE__}} STREQUAL ARM)
            list(APPEND __SOURCES__ src/arm-gen.c src/arm-link.c src/arm-asm.c)
        elseif(${${__TARGET_ARCHITECTURE__}} STREQUAL ARM64)
            list(APPEND __SOURCES__ src/arm64-gen.c src/arm64-link.c)
        endif()
        if(WIN32)
            list(APPEND __SOURCES__ src/tccpe.c)
        endif()
    endif()

    if(LIBTCC_ENABLE_EXTENSION)
        list(APPEND __SOURCES__ extension/src/libtcc_ext.c extension/src/private/src/utility.c extension/src/private/src/filesystem.c extension/src/private/src/str_builder.c)
        if(NOT LIBTCC_ONE_SOURCE)
            list(APPEND __SOURCES__ src/tcctools.c)
        endif()
    endif()

    if(${__STATUS_MESSAGE__})
        message(STATUS "Libtcc source files: ${__SOURCES__}")
    endif()

    set(${__LIBTCC_SOURCES__} ${__SOURCES__} PARENT_SCOPE)
endfunction()